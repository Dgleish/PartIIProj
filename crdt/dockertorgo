#!/bin/bash
others(){
    file="./keys"
    other_onions=':'
    private_key=''
    auth_cookies='|'
    my_cookie=''
    for j in $(seq 2 $(($2+1))); do
        read -r priv 
        read -r onion
        read -r auth_cookie
        if [ "$1" != "$j" ]
        then            
            auth_cookies+="${auth_cookie}|"
            other_onions+="${onion}:"
        else
            my_cookie=$auth_cookie
            private_key=$priv
            my_onion=$onion
        fi
    done<"$file"
    eval "$3='${my_onion}'"
    eval "$4='${other_onions}'"
    eval "$5='${private_key}'"
    eval "$6='${my_cookie}'"
    eval "$7='${auth_cookies}'"
}

# NUMBER OF INSTANCES TO SPAWN
numPeers=$1

# ENCRYPT COMMUNICATIONS OR NOT
encrypt=$2

# ALLOW CONTAINERS TO LOG TO GET X
xhost +local:root

# BUILD DOCKER IMAGE
docker build . -t p2p

# REMOVE EXISTING DOCKER IMAGES
docker ps -aq | xargs docker rm -f

currdir=`pwd`

# DOCKER RUN WITH APPROPRIATE ARGUMENTS
for i in $(seq 2 $((numPeers+1))); do
    ip="172.18.0.${i}"
    other_onions=''
    priv=''
    my_onion=''
    cookies=''
    my_cookie=''
    others $i $numPeers my_onion other_onions priv my_cookie cookies
    args="${my_onion} ${other_onions} ${encrypt} ${priv} ${my_cookie} ${cookies}"
    gnome-terminal -x sh -c "docker run --net=net1 --ip ${ip} --name p2p${i} -e args='${args}' -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -it p2p; bash"
done
